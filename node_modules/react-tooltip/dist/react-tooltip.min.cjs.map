{"version":3,"file":"react-tooltip.min.cjs","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils/debounce.ts","../src/components/TooltipProvider/TooltipProvider.tsx","../src/components/TooltipProvider/TooltipWrapper.tsx","../src/utils/use-isomorphic-layout-effect.ts","../src/utils/compute-positions.ts","../src/components/Tooltip/Tooltip.tsx","../src/components/TooltipContent/TooltipContent.tsx","../src/components/TooltipController/TooltipController.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px` }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-4px',\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { computeTooltipPosition } from '../../utils/compute-positions'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n  }\n\n  const handleEsc = (event: KeyboardEvent) => {\n    if (event.key !== 'Escape') {\n      return\n    }\n    handleShow(false)\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = !hidden && content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [styles['show']]: canShow,\n          [styles['fixed']]: positionStrategy === 'fixed',\n          [styles['clickable']]: clickable,\n        },\n      )}\n      style={{ ...externalStyles, ...inlineStyles }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames('react-tooltip-arrow', styles['arrow'], classNameArrow, {\n          /**\n           * changed from dash `no-arrow` to camelcase because of:\n           * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n           */\n          [styles['noArrow']]: noArrow,\n        })}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style,\n  position,\n  isOpen,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipHidden, setTooltipHidden] = useState(hidden)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n      hidden: (value) => {\n        setTooltipHidden(value === null ? hidden : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    setTooltipVariant(variant)\n  }, [variant])\n\n  useEffect(() => {\n    setTooltipOffset(offset)\n  }, [offset])\n\n  useEffect(() => {\n    setTooltipDelayShow(delayShow)\n  }, [delayShow])\n\n  useEffect(() => {\n    setTooltipDelayHide(delayHide)\n  }, [delayHide])\n\n  useEffect(() => {\n    setTooltipFloat(float)\n  }, [float])\n\n  useEffect(() => {\n    setTooltipHidden(hidden)\n  }, [hidden])\n\n  useEffect(() => {\n    setTooltipPositionStrategy(positionStrategy)\n  }, [positionStrategy])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${anchorSelect}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  /**\n   * content priority: children < render or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    const rendered = render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode\n    renderedContent = rendered ? (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {rendered}\n      </div>\n    ) : null\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    hidden: tooltipHidden,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    style,\n    position,\n    isOpen,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","debounce","func","wait","immediate","timeout","args","later","apply","this","setTimeout","clearTimeout","DEFAULT_TOOLTIP_ID","DEFAULT_CONTEXT_DATA","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","DEFAULT_CONTEXT_DATA_WRAPPER","getTooltipData","TooltipContext","createContext","useTooltip","tooltipId","useContext","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","computeTooltipPosition","async","elementReference","tooltipReference","tooltipArrowReference","place","offset","offsetValue","strategy","middlewares","Number","flip","shift","padding","tooltipStyles","tooltipArrowStyles","middleware","push","arrow","element","computePosition","placement","then","x","y","middlewareData","styles","left","top","arrowX","arrowY","_a","right","bottom","_b","split","Tooltip","id","className","classNameArrow","variant","anchorId","anchorSelect","events","openOnClick","positionStrategy","wrapper","WrapperElement","delayShow","delayHide","float","hidden","noArrow","clickable","closeOnEsc","externalStyles","position","afterShow","afterHide","content","contentWrapperRef","isOpen","setIsOpen","tooltipRef","useRef","tooltipArrowRef","tooltipShowDelayTimerRef","tooltipHideDelayTimerRef","actualPlacement","setActualPlacement","useState","inlineStyles","setInlineStyles","inlineArrowStyles","setInlineArrowStyles","show","setShow","rendered","setRendered","wasShowing","lastFloatPosition","setProviderActiveAnchor","hoveringTooltip","anchorsBySelect","setAnchorsBySelect","mounted","shouldOpenOnClick","includes","handleShow","value","undefined","handleHideTooltipDelayed","delay","handleShowTooltip","event","target","currentTarget","isConnected","handleHideTooltip","handleTooltipPosition","getBoundingClientRect","width","height","computedStylesData","Object","keys","length","handleMouseMove","mouseEvent","mousePosition","clientX","clientY","handleClickTooltipAnchor","handleClickOutsideAnchors","querySelector","some","anchor","contains","handleEsc","key","debouncedHandleShowTooltip","debouncedHandleHideTooltip","elementRefs","forEach","add","anchorById","addEventListener","enabledEvents","listener","handleMouseEnterTooltip","handleMouseLeaveTooltip","removeEventListener","selector","documentObserver","MutationObserver","mutationList","newAnchors","mutation","attributeName","getAttribute","removedNodes","node","call","elements","addedNodes","filter","nodeType","matches","flatMap","querySelectorAll","anchors","observe","body","childList","subtree","attributes","attributeFilter","disconnect","updateTooltipPosition","contentObserver","ResizeObserver","Array","from","canShow","React","role","classNames","TooltipContent","dangerouslySetInnerHTML","__html","html","render","children","tooltipContent","setTooltipContent","tooltipHtml","setTooltipHtml","tooltipPlace","setTooltipPlace","tooltipVariant","setTooltipVariant","tooltipOffset","setTooltipOffset","tooltipDelayShow","setTooltipDelayShow","tooltipDelayHide","setTooltipDelayHide","tooltipFloat","setTooltipFloat","tooltipHidden","setTooltipHidden","tooltipWrapper","setTooltipWrapper","tooltipEvents","setTooltipEvents","tooltipPositionStrategy","setTooltipPositionStrategy","providerActiveAnchor","getDataAttributesFromAnchorElement","getAttributeNames","reduce","acc","name","startsWith","replace","applyAllDataAttributesFromAnchorElement","dataAttributes","handleDataAttributes","parsed","values","handler","entries","console","warn","size","anchorElement","observer","observerConfig","renderedContent","props","anchorRefMap","setAnchorRefMap","activeAnchorMap","setActiveAnchorMap","refs","oldMap","tooltipRefs","delete","useCallback","context","useMemo","Provider","anchorRef"],"mappings":"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"}